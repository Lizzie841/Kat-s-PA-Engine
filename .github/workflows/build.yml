name: Build Matrix

on:
  pull_request:
  push:

jobs:
  linux-build:
    strategy:
      matrix:
        config: [x64-debug-linux-clang]
        os: [ubuntu-latest]

    name: Ubuntu with ${{ matrix.compiler }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: "Install"
      uses: awalsh128/cache-apt-pkgs-action@v1.3.1
      with:
        packages: git build-essential clang cmake libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libicu-dev
        version: 1.0

    - name: Set environment
      run: |
        echo "CC=${{ matrix.compiler == 'gcc' && 'gcc' || 'clang-15' }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.compiler == 'gcc' && 'g++' || 'clang++-15' }}" >> $GITHUB_ENV

    - name: Configure Build Files
      run: |
        cmake -DARCHITECTURE=x64 -DCMAKE_BUILD_TYPE=Debug -B build

    - name: Build Katerina Engine
      run: |
        cmake --build build --target KatEngine

  windows-build:
    strategy:
      matrix:
        config: [x64-debug-windows]
    runs-on: [windows-latest]
    name: Windows (${{ matrix.config }})
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install ICU
      uses: johnwason/vcpkg-action@v6
      with:
        pkgs: 'icu'
        triplet: 'x64-windows'
        cache-key: ${{ matrix.config }}
        token: ${{ github.token }}
        github-binarycache: true
      env: 
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    - name: Configure Build Files
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_INSTALLATION_ROOT }}\scripts\buildsystems\vcpkg.cmake" -DARCHITECTURE=x64 -DCMAKE_BUILD_TYPE=Debug -G "Visual Studio 17 2022" -B build

    - name: Build Katerina Engine
      run: |
        cmake --build build --target KatEngine

  macos-build:
    strategy:
      matrix:
        config: [aarch64-debug-macos]
    runs-on: [macos-latest]
    name: MacOS (${{ matrix.config }})
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install ICU
      run: |
        brew install icu4c

    - name: Configure Build Files
      run: |
        cmake -DARCHITECTURE=aarch64 -DCMAKE_PREFIX_PATH=/usr/local/opt/icu4c -DCMAKE_BUILD_TYPE=Debug -B build

    - name: Build Katerina Engine
      run: |
        cmake --build build --target KatEngine

  build-check:
    needs: [windows-build, linux-build, macos-build]
    runs-on: ubuntu-latest
    name: Build Matrix
    steps:
      - name: Check
        run: |
          echo success
